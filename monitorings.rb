module PoolParty
  module Mrtg
    module Monitorings

      def enable_cpu
          has_package("sysstat")

          has_cron(:name => "Run sysstat sa1", 
                   :command => "/usr/lib/sysstat/sa1 -d 1 1",
                   :minute => "*/10")

          has_cron(:name => "Run sysstat sa2", 
                   :command => "/usr/lib/sysstat/sa2 -A",
                   :hour   => "23",
                   :minute => "53")
      end

      def enable_apache
mod_status =<<EOF
<IfModule mod_status.c>
#
# Allow server status reports generated by mod_status,
# with the URL of http://servername/server-status
# Uncomment and change the ".example.com" to allow
# access from other hosts.
#
<Location /server-status>
    SetHandler server-status
    Order deny,allow
    Deny from all
    Allow from localhost ip6-localhost
    Allow from 127.0.0.1
    Satisfy Any
</Location>

</IfModule>
EOF

        has_file({:content => mod_status, 
                  :name => "/etc/apache2/mods-available/custom_status.conf", 
                  :ensures => 'present', 
                  :requires => get_package("apache2")})
        present_apache_module("custom_status", :requires => get_file("/etc/apache2/mods-available/custom_status.conf"))
 
        has_package("lynx") # todo, remove this dependency
      end

      # The enable statements below are not required to add something to the
      # mrtg config. However, they can be used if you want to enable specific
      # dependencies for a particular monitoring.

      def enable_uptime
      end

      def enable_disk 
      end

      def enable_memory
      end
      
      def enable_processes
      end
      
      def enable_uptime
      end

      def enable_free_memory
      end

      def enable_open_files
      end 

      def enable_snmp_network
      end

      def enable_network_interfaces
      end

    end
  end
end
 

